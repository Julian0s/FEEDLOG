rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles - private to each user
    match /user_profiles/{profileId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.owner_id;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.owner_id;
    }
    
    // User meals - private to each user
    match /user_meals/{mealId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.owner_id;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.owner_id;
    }
    
    // User goals - private to each user  
    match /user_goals/{goalId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.owner_id;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.owner_id;
    }
    
    // User progress tracking - private to each user
    match /user_progress/{progressId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.owner_id;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.owner_id;
    }
    
    // Food database - public read access for all authenticated users
    match /food_items/{foodId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins can write via server-side
    }
    
    // Recipe database - public read access for all authenticated users
    match /recipes/{recipeId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins can write via server-side
    }
    
    // User settings - private to each user
    match /user_settings/{settingsId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.owner_id;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.owner_id;
    }
  }
}